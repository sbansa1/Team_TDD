version: '3.7'

services:

  users:
    container_name: user-service
    build:
      context: ./services/users
      dockerfile: Dockerfile
    entrypoint: ['/usr/src/app/entrypoint.sh']  # new
    volumes:
      - './services/users:/usr/src/app'
    ports:
      - 5001:5000
    environment:
      #- FLASK_APP=app/__init__.py
      - FLASK_ENV=development
      - APP_SETTINGS=app.config.DevelopmentConfig
      - DATABASE_URL=postgresql://postgres:postgres@users-db:5432/users_dev
      - DATABASE_TEST_URL=postgresql://postgres:postgres@users-db:5432/users_test
    depends_on:
      - users-db

  users-db:
    build:
      context: ./services/users/app/db
      dockerfile: Dockerfile
    expose:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  client:
    build:
      context: ./services/client
      dockerfile: Dockerfile
    volumes:
    - './services/client:/usr/src/app'
    - '/usr/src/app/node_modules'
    ports:
    - 3007:3000
    environment:
      - NODE_ENV=development
      - REACT_APP_USERS_SERVICE_URL=${REACT_APP_USERS_SERVICE_URL}
    depends_on:
      - users

  nginx:
    container_name: nginx
    build:
      context: ./services/nginx
      dockerfile: Dockerfile
    restart: always
    ports:
    - 80:80
    depends_on:
      - users
      - testing


  testing:
    container_name: testing-service
    build:
      context: ./services/test
      dockerfile: Dockerfile
    volumes:
    - './services/test:/usr/src/app'
    ports:
    - 5002:5000
    environment:
      - FLASK_ENV=development


  swagger:
    container_name: swagger
    build:
      context: ./services/swagger
      dockerfile: Dockerfile
    ports:
      - '8080:8080' # expose ports - HOST:CONTAINER
    environment:
      - API_URL=https://raw.githubusercontent.com/realpython/flask-microservices-swagger/master/swagger-prod.json
    depends_on:
      - users
      - testing